//Arg
// @mixin frame_size($width, $height: $width){
// width: $width;
// height:$height;

// }

// .avatar{
//     @include frame-size(150px);
//     border-radius:50%;
// }
// .icon{
//     @include frame-size(50px);
//     border:2px solid;
// }

 





// @mixin position-center{
//     position:absolute;
//     top:50%;
//     left:50%;
//     transform:translate(-50%,-50%);
// }

// .decoration{
//     @include position-center;
// }


// @mixin position($position-type, $position-x, $position-y, $offset-x, $offset-y){
//     position:absolute;
//     top:$position-y;
//     left:$position-x;
//     transform:translate($offset-x,$offset-y);
// }

// .decoration{
//     @include position(absolute, 50%, 50%, -50%, -50%);
// }



// //Optional 

// @mixin position(
//     $layer-index,
//     $position-type:absolute,
//  $position-x:50%, 
//  $position-y:$position-x,
//   $offset-x:$position-x,
//    $offset-y:$position-x,
//    ){
//     position:absolute;
//     top:$position-y;
//     left:$position-x;
//     transform:translate(($offset-x * -1),($offset-y * -1));
//     z-index:$layer-index;
// }

// .decoration{
//     @include position(100);
// }

// %btn {
//     font-family: Montserrat;
//     font-size: 14px;
//     font-weight: 500;
//     line-height: 20px; /* 142.857% */
//     letter-spacing: 0.5px;
//     color: #fafafb;
  
//     background-color: #f07f2e;
//     border: none;
//     cursor: pointer;
//     transition: 300ms;
  
//     &:hover,
//     &:focus {
//       background-color: #f15c27;
//       box-shadow: 0px 4px 10px 0px rgba(240, 127, 46, 0.25);
//     }
//   }
//   @mixin btn-size($args...) {
//     @for $i from 1 through length($args) {
//       #{nth($args, $i)} {
//         $factor: ($i * 4 - 4);
  
//         @extend %btn;
  
//         padding: (4px + $factor) (8px + $factor);
//         border-radius: (8px + $factor);
//       }
//     }
//   }
// @include btn-size(".btn-sm", ".btn-md", ".btn-lg", ".btn-xl");

// @use "sass:meta";
// @mixin btn-type($types...){
//     @each $name, $color in meta.keywords($types){
//         .btn-#{$name}{
//            border:2px solid $color;
//            color:$color
//         }
//     }
// }
// @include btn-type($success: lightgreen, $error:tomato, $info:lightblue);
// // $types:(
// //     success: lightgreen,
// //     error:tomato,
// //     info:lightblue
// // )
@use "sass:meta";
@mixin btn-type($types...) {
    // $types: (
    //   $success: lightgreen,
    //   $error: tomato,
    //   $info: lightblue,
    // );
  
    @each $name, $color in meta.keywords($types) {
      .btn-#{$name} {
        border: 2px solid $color;
        color: $color;
      }
    }
  }
  
  @include btn-type($success: lightgreen, $error: tomato, $info: lightblue);
  
  @mixin hover($state) {
    &:not([#{$state}]):hover {
      @content;
    }
  }
  
  .button {
    background-color: white;
    border: 1px solid darkblue;
  
    @include hover($state: disabled) {
      color: white;
      background-color: darkblue;
    }
  }